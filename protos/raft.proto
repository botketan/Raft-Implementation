syntax = "proto3";

option go_package = "./protos";

message Configuration {
    map<string, string> members = 1;
    int64 log_index = 2;
}

message LogEntry {
    int64 index  = 1;
    int64 term   = 2;
    bytes  data   = 3;
    int64 seqNo = 4;
    string clientID = 5;
    enum LogEntryType {
        NORMAL_OP = 0;
        CONFIG_OP    = 1;
    }
    LogEntryType entry_type = 6;
}

message AppendEntriesRequest {
    string            leader_id      = 1;
    int64            term           = 2;
    int64          leader_commit  = 3;
    int64            prev_log_index = 4;
    int64            prev_log_term  = 5;
    repeated LogEntry entries        = 6;
}

message AppendEntriesResponse {
    int64 term    = 1;
    int64 conflict_index   = 2;
    int64 conflict_term = 3;
    bool   success = 4;
}

message RequestVoteRequest {
    string candidate_id   = 1;
    int64 term           = 2;
    int64 last_log_index = 3;
    int64 last_log_term  = 4;
    bool prevote = 5;
}

message RequestVoteResponse {
    int64 term         = 1;
    bool   vote_granted = 2;
}

message SubmitOperationRequest {
    string client_id = 1;
    int64 seq_no     = 2;
    bytes operation  = 3;
}

message SubmitOperationResponse {
    bool success   = 1;
    string message = 2;
}

message AddServerRequest {
    string node_id = 1;
    string address = 2;
}

message AddServerResponse {
    string status = 1;
    string leader_hint = 2;
}

message RemoveServerRequest {
    string node_id = 1;
    string address = 2;
}

message RemoveServerResponse {
    string status = 1;
    string leader_hint = 2;
}

service Raft {
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
    rpc SubmitOperation(SubmitOperationRequest) returns (SubmitOperationResponse) {}
    rpc AddServer(AddServerRequest) returns (AddServerResponse) {}
    rpc RemoveServer(RemoveServerRequest) returns (RemoveServerResponse) {}
}